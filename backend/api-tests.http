### Register User
POST http://localhost:3000/api/users/register
Content-Type: application/json

{
  "username": "Tester 1",
  "email": "test1@example.com",
  "password": "Test1234"
}

### Login User
POST http://localhost:3000/api/users/login
Content-Type: application/json

{
  "email": "test1@example.com",
  "password": "Test1234"
}

> {%
    if (response.body.token) {
        client.global.set("auth_token", response.body.token);
        client.log("Token saved: " + response.body.token);
    } else {
        client.log("No token in response");
        client.log(JSON.stringify(response.body));
    }
%}

### Search Books
GET http://localhost:3000/api/books/search?q=harry potter

### Get Book by ISBN
GET http://localhost:3000/api/books/isbn/0747532699
Content-Type: application/json

> {%
    client.test("Book details include cover URL", function() {
        client.assert(response.status === 200, "Response status should be 200");
        client.assert(response.body.coverURL, "Response should include coverUrl");
        client.assert(
            response.body.coverURL.includes("covers.openlibrary.org"),
            "Cover URL should be from Open Library"
        );
    });
%}

### Get Books by Author
GET http://localhost:3000/api/books/author/J.K.%20Rowling

### Create Review
POST http://localhost:3000/api/reviews
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "bookId": "0747532699",
  "rating": 5,
  "comment": "Great book!"
}

### Get Reviews for a Book
GET http://localhost:3000/api/reviews/book/0747532699

### Update Review (Replace review_id with an actual review ID)
PUT http://localhost:3000/api/reviews/675add491bba4e69ff89c5d5
Authorization: Bearer {{auth_token}}
Content-Type: application/json

{
  "rating": 4,
  "comment": "Updated review comment"
}

### Delete Review (Replace review_id with an actual review ID)
DELETE http://localhost:3000/api/reviews/675add491bba4e69ff89c5d5
Authorization: Bearer {{auth_token}}